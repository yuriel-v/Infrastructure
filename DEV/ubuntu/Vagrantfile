# Vagrantfile for Ubuntu VMs - Beta host
$private_adpt = "VirtualBox Host-Only Ethernet Adapter"
$public_adpt = "Realtek PCIe GbE Family Controller"

Vagrant.configure("2") do |config|
  # global configs, can be overridden
  config.vm.box = "ubuntu/focal64"
  config.vm.synced_folder "../../shared", "/shared/global", owner: "vagrant"
  config.vm.synced_folder "./shared", "/shared/dev/ubuntu", owner: "vagrant"
  config.vm.synced_folder "." "/vagrant", disabled: true  # doesn't work for some fucking reason

  # global shell provisioner
  config.vm.provision "shell", path: "../../shared/linux-scripts/global.sh"

  # ----- Ansible -------------------------------------------------------------
  # ansible: 172.16.0.100
  $ansible = "ansible"
  config.vm.define $ansible do |ans|
    ans.vm.network "private_network", ip: "172.16.0.100", netmask: "255.255.0.0", name: $private_adpt
    ans.vm.provision "shell", path: "../../shared/linux-scripts/ansible.sh"

    ans.vm.provider "virtualbox" do |vb|
      vb.memory = 768
      vb.cpus = 2
      vb.name = "Ansible"
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
      vb.customize ["modifyvm", :id, "--cableconnected2", "on"]
    end
  end

  # ----- Dev-Linux -----------------------------------------------------------
  # dev-linux: 172.16.0.101
  $dvm = "dev-linux"
  config.vm.define $dvm do |dvm|
    # networking
    dvm.vm.network "private_network", ip: "172.16.0.101", netmask: "255.255.0.0", name: $private_adpt
    dvm.vm.network "public_network", ip: "192.168.0.78", bridge: $public_adpt  # this IP is up to you, could use DHCP (value 'dhcp') if unsure about a static IP

    # box
    #dvm.vm.box = "chenhan/ubuntu-desktop-20.04"
    #dvm.vm.box_version = "20200424"
    dvm.vm.box = "fasmat/ubuntu2004-desktop"

    # synched folders
    dvm.vm.synced_folder "../../", "/shared/VMs", owner: "vagrant"

    # provisioning
    dvm.vm.provision "shell", path: "../../shared/linux-scripts/self-ansible_linux.sh", args: "dev-master #{$dvm}"

    # virtualbox-specific
    dvm.vm.provider "virtualbox" do |vb|
      vb.memory = 3072
      vb.cpus = 4
      vb.name = "Dev-Linux"
      vb.customize ["modifyvm", :id, "--accelerate3d", "on"]
      vb.customize ["modifyvm", :id, "--vrde", "off"]
      vb.customize ["modifyvm", :id, "--vram", "128"]
      vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
      vb.customize ["modifyvm", :id, "--cableconnected1", "on"]
      vb.customize ["modifyvm", :id, "--cableconnected2", "on"]
      vb.customize ["modifyvm", :id, "--cableconnected3", "on"]
      vb.customize ["storageattach", :id, "--storagectl", "IDE Controller",
                    "--port", "0", "--device", "1",
                    "--type", "dvddrive",
                    "--medium", "emptydrive"]
    end
  end

  # gaming: 172.16.1.0/16
  # zerotier network: 172.20.0.0/16 (172.20.0.2 ~ 172.20.255.254)
  # ----- Terraria ------------------------------------------------------------
  # terraria-1: 172.16.1.100
  $terraria1 = "terraria-1"
  config.vm.define $terraria1 do |tr|
    tr.vm.network "private_network", ip: "172.16.1.100", netmask: "255.255.0.0", name: $private_adpt

    # Only set this if you've port forwarded an address and don't want to install ZeroTier One.
    # tr.vm.network "public_network", ip: "192.168.0.100", bridge: $public_adpt

    # If you already have a defined public IP for the server, enter it on the args below as "gs_server_ip=127.0.0.1"
    tr.vm.provision "shell", path: "../../shared/linux-scripts/self-ansible_linux.sh", args: "game-server #{$terraria1} \"gs_type=terraria gs_overwrite=True\""
    #                                                                                                                         ^ insert IP within these double quotes

    tr.vm.provider "virtualbox" do |vb|
      vb.memory = 4096
      vb.cpus = 4
      vb.name = "Terraria-Server-1"
    end
  end
end